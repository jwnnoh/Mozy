name: Deploy with Docker

on:
  push:
    branches: [ main ]

  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setting .env
        run: |
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> ./.env
          echo "LANGCHAIN_TRACING_V2=${{ secrets.LANGCHAIN_TRACING_V2 }}" >> ./.env
          echo "LANGCHAIN_ENDPOINT=${{ secrets.LANGCHAIN_ENDPOINT }}" >> ./.env
          echo "LANGCHAIN_API_KEY=${{ secrets.LANGCHAIN_API_KEY }}" >> ./.env
          echo "LANGCHAIN_PROJECT=${{ secrets.LANGCHAIN_PROJECT }}" >> ./.env
          cat ./.env

      - name: Setup Docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Image Build
        uses: docker/build-push-action@v6
        with:
          push: false
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          tags: mozy:latest

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_ACCESS_TOKEN}}

      - name: Docker Image Push
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          file: ./Dockerfile
          tags: jwnnoh/mozy:latest

  deploy:
    needs: build
    name: Deploy
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Docker Deploy
        uses: appleboy/ssh-action@master
        with:
            host: ${{secrets.EC2_HOST}}
            username: ubuntu
            key: ${{secrets.EC2_PEM_KEY}}
            port: ${{ secrets.SSH_PORT }}
            script: |
              sudo docker pull jwnnoh/mozy:latest
              
              if [ $(sudo docker ps -aq -f name=mozy) ]; then
               sudo docker stop mozy
               sudo docker rm mozy
              fi
              
              sudo docker run -d -p ${{ secrets.PORT }}:80 --name mozy jwnnoh/mozy:latest
              sudo docker image prune -a -f